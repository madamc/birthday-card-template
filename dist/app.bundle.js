/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/helpers.ts":
/*!************************!*\
  !*** ./src/helpers.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getGameWidth\": () => (/* binding */ getGameWidth),\n/* harmony export */   \"getGameHeight\": () => (/* binding */ getGameHeight),\n/* harmony export */   \"createTextBubble\": () => (/* binding */ createTextBubble)\n/* harmony export */ });\nconst getGameWidth = (scene) => {\r\n    return scene.game.scale.width;\r\n};\r\nconst getGameHeight = (scene) => {\r\n    return scene.game.scale.height;\r\n};\r\nfunction createTextBubble(scene, width, height, quote, bubble, bitmapText) {\r\n    let bubble1 = scene.bubble1;\r\n    bubble1.clear();\r\n    var bubbleWidth = width;\r\n    var bubbleHeight = height;\r\n    var bubblePadding = 10;\r\n    var arrowHeight = bubbleHeight / 4;\r\n    //var bubble = scene.add.graphics({ x: x, y: y });\r\n    //  Bubble shadow\r\n    bubble1.fillStyle(0x222222, 0.5);\r\n    bubble1.fillRoundedRect(6, 6, bubbleWidth, bubbleHeight, 16);\r\n    //  Bubble color\r\n    bubble1.fillStyle(0xffffff, 1);\r\n    //  Bubble outline line style\r\n    bubble1.lineStyle(4, 0x565656, 1);\r\n    //  Bubble shape and outline\r\n    bubble1.strokeRoundedRect(0, 0, bubbleWidth, bubbleHeight, 16);\r\n    bubble1.fillRoundedRect(0, 0, bubbleWidth, bubbleHeight, 16);\r\n    //  Calculate arrow coordinates\r\n    var point1X = Math.floor(bubbleWidth / 7);\r\n    var point1Y = bubbleHeight;\r\n    var point2X = Math.floor((bubbleWidth / 7) * 2);\r\n    var point2Y = bubbleHeight;\r\n    var point3X = Math.floor(bubbleWidth / 7);\r\n    var point3Y = Math.floor(bubbleHeight + arrowHeight);\r\n    //var content = scene.add.bitmapText(400, 300, 'atari', quote, 30, 'center').setMaxWidth(1000).setOrigin(0).setScale(1);//.add.text(0, 0, quote, { fontFamily: 'atari', fontSize: 20, color: '#000000', align: 'center', wordWrap: { width: bubbleWidth - (bubblePadding * 2) } });\r\n    bubble1.setPosition(window.innerWidth / 2 - bubbleWidth / 2, bubble1.y);\r\n    bitmapText.text = quote;\r\n    //bitmapText.setPosition(bubble.x + (bubbleWidth / 2) - (bitmapText.width / 2), bubble.y + (bubbleHeight / 2) - (bitmapText.height / 2));\r\n    bitmapText.setPosition(bubble1.x + 50, bubble1.y + 25);\r\n    return bitmapText;\r\n}\r\n\n\n//# sourceURL=webpack://coryproj/./src/helpers.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"game\": () => (/* binding */ game)\n/* harmony export */ });\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! phaser */ \"./node_modules/phaser/dist/phaser.js\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _scenes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scenes */ \"./src/scenes/index.ts\");\n\r\n\r\nconst gameConfig = {\r\n    title: 'Sample',\r\n    type: phaser__WEBPACK_IMPORTED_MODULE_0__.AUTO,\r\n    pixelArt: true,\r\n    scale: {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n    },\r\n    scene: _scenes__WEBPACK_IMPORTED_MODULE_1__.default,\r\n    physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n            debug: false,\r\n        },\r\n    },\r\n    parent: 'game',\r\n    backgroundColor: '#000000',\r\n};\r\nconst game = new phaser__WEBPACK_IMPORTED_MODULE_0__.Game(gameConfig);\r\nwindow.addEventListener('resize', () => {\r\n    game.scale.refresh();\r\n});\r\n\n\n//# sourceURL=webpack://coryproj/./src/main.ts?");

/***/ }),

/***/ "./src/scenes/boot-scene.ts":
/*!**********************************!*\
  !*** ./src/scenes/boot-scene.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BootScene\": () => (/* binding */ BootScene)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers */ \"./src/helpers.ts\");\n\r\nconst sceneConfig = {\r\n    active: false,\r\n    visible: false,\r\n    key: 'Boot',\r\n};\r\n/**\r\n * The initial scene that loads all necessary assets to the game and displays a loading bar.\r\n */\r\nclass BootScene extends Phaser.Scene {\r\n    constructor() {\r\n        super(sceneConfig);\r\n    }\r\n    preload() {\r\n        const halfWidth = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this) * 0.5;\r\n        const halfHeight = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) * 0.5;\r\n        const progressBarHeight = 100;\r\n        const progressBarWidth = 400;\r\n        const progressBarContainer = this.add.rectangle(halfWidth, halfHeight, progressBarWidth, progressBarHeight, 0x000000);\r\n        const progressBar = this.add.rectangle(halfWidth + 20 - progressBarContainer.width * 0.5, halfHeight, 10, progressBarHeight - 20, 0x888888);\r\n        const loadingText = this.add.text(halfWidth - 75, halfHeight - 100, 'Loading...').setFontSize(24);\r\n        const percentText = this.add.text(halfWidth - 25, halfHeight, '0%').setFontSize(24);\r\n        const assetText = this.add.text(halfWidth - 25, halfHeight + 100, '').setFontSize(24);\r\n        this.load.on('progress', (value) => {\r\n            progressBar.width = (progressBarWidth - 30) * value;\r\n            const percent = value * 100;\r\n            percentText.setText(`${percent}%`);\r\n        });\r\n        this.load.on('fileprogress', (file) => {\r\n            assetText.setText(file.key);\r\n        });\r\n        this.load.on('complete', () => {\r\n            loadingText.destroy();\r\n            percentText.destroy();\r\n            assetText.destroy();\r\n            progressBar.destroy();\r\n            progressBarContainer.destroy();\r\n            this.scene.start('MainMenu');\r\n        });\r\n        this.loadAssets();\r\n    }\r\n    /**\r\n     * All assets that need to be loaded by the game (sprites, images, animations, tiles, music, etc)\r\n     * should be added to this method. Once loaded in, the loader will keep track of them, indepedent of which scene\r\n     * is currently active, so they can be accessed anywhere.\r\n     */\r\n    loadAssets() {\r\n        // Load sample assets\r\n        // Source: Open Game Art\r\n        this.load.image('man', 'assets/sprites/character.png');\r\n        this.load.image('sky', 'assets/sprites/sky.png');\r\n        this.load.image('road', 'assets/sprites/road.png');\r\n        this.load.spritesheet('buildings', 'assets/sprites/buildings.png', { frameWidth: 64, frameHeight: 96 });\r\n        this.load.spritesheet('runchase', 'assets/sprites/Runners-Sheet.png', { frameWidth: 20, frameHeight: 20 });\r\n        this.load.spritesheet('block', 'assets/sprites/DummySquare-Sheet.png', { frameWidth: 8, frameHeight: 8 });\r\n        this.load.spritesheet('block2', 'assets/sprites/DummySquare-Sheet2.png', { frameWidth: 8, frameHeight: 8 });\r\n        this.load.audio('song', 'assets/sounds/runnersandchasers1.mp3');\r\n        this.load.audio('playershot', 'assets/sounds/playershot.wav');\r\n        this.load.audio('playerdied', 'assets/sounds/playerdie.wav');\r\n        this.load.audio('chasershot', 'assets/sounds/chasershot.wav');\r\n        this.load.audio('chaserdied', 'assets/sounds/chaserdie.wav');\r\n        this.load.bitmapFont('atari', 'assets/sprites/atari-classic-b.png', 'assets/sprites/atari-classic.xml');\r\n        this.load.bitmapFont('atari-w', 'assets/sprites/atari-classic.png', 'assets/sprites/atari-classic.xml');\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://coryproj/./src/scenes/boot-scene.ts?");

/***/ }),

/***/ "./src/scenes/game-scene.ts":
/*!**********************************!*\
  !*** ./src/scenes/game-scene.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameScene\": () => (/* binding */ GameScene)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers */ \"./src/helpers.ts\");\n/* harmony import */ var _object_scroll_managers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./object-scroll-managers */ \"./src/scenes/object-scroll-managers.ts\");\n\r\n\r\nconst sceneConfig = {\r\n    active: false,\r\n    visible: false,\r\n    key: 'Game',\r\n};\r\nlet backGroundCounterDebug = 0;\r\nclass GameScene extends Phaser.Scene {\r\n    //private maingroundGroup: Phaser.GameObjects.Group;\r\n    //private guardGroup: Phaser.GameObjects.Group;\r\n    constructor() {\r\n        super(sceneConfig);\r\n        this.speed = 200;\r\n    }\r\n    create() {\r\n        this.song = this.sound.add('song', { loop: true });\r\n        this.playerShot = this.sound.add('playershot', { loop: false });\r\n        this.playerDied = this.sound.add('playerdied', { loop: false });\r\n        this.chaserShot = this.sound.add('chasershot', { loop: false });\r\n        this.chaserDied = this.sound.add('chaserdied', { loop: false });\r\n        this.song.play();\r\n        this.background = this.add.image(0, 0, \"sky\").setOrigin(0, 0).setScale(7);\r\n        this.initializeGroups();\r\n        // Add a player sprite that can be moved around. Place him in the middle of the screen.\r\n        this.addAnimations();\r\n        this.player = this.physics.add.sprite((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this) / 2, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 2, 'runchase', 3).setScale(5).setDepth(4).play(\"playerRun\");\r\n        this.playerDead = false;\r\n        this.playerDieAnimPlayed = false;\r\n        // This is a nice helper Phaser provides to create listeners for some of the most common keys.\r\n        this.cursorKeys = this.input.keyboard.createCursorKeys();\r\n        this.physics.add.collider(this.player, this.platforms1.group);\r\n        this.physics.add.collider(this.player, this.platforms2.group);\r\n        this.physics.add.overlap(this.playerBullets.group, this.chasersGroup.group, this.chaserBulletCollide, null, this);\r\n        this.physics.add.overlap(this.chasersGroup.group, this.player, this.playerHit, null, this);\r\n        this.physics.add.overlap(this.chaserBullets.group, this.player, this.playerHit, null, this);\r\n        this.cameras.main.setSize((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this));\r\n        this.cameras.main.startFollow(this.player, false, 1, 0);\r\n        this.bubble1 = this.add.graphics({ x: window.innerWidth / 2, y: 200 }).setDepth(10);\r\n        this.message1 = this.add.bitmapText(window.innerWidth / 2, 300, 'atari', \"quote\", 30, Phaser.GameObjects.BitmapText.ALIGN_LEFT).setMaxWidth(1000).setOrigin(0).setScale(1).setDepth(11);\r\n        this.message2 = this.add.bitmapText(((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this) / 2) - 300, ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3) * 2 + 250, 'atari-w', \"Press Shift for Instructions\", 30, Phaser.GameObjects.BitmapText.ALIGN_LEFT).setMaxWidth(1000).setOrigin(0).setScale(1).setDepth(11);\r\n    }\r\n    update() {\r\n        // Every frame, we create a new velocity for the sprite based on what keys the player is holding down.\r\n        const velocity = new Phaser.Math.Vector2(0, 0);\r\n        velocity.x = 1;\r\n        if (this.playerDead) {\r\n            if (this.player.anims.currentAnim.key != \"playerDie\") {\r\n                this.playerDieAnimPlayed = true;\r\n                this.player.play(\"playerDie\");\r\n            }\r\n            if (this.player.anims.currentFrame.index == 4 && this.player.anims.currentAnim.key == \"playerDie\") {\r\n                this.player.disableBody(true, false);\r\n            }\r\n            //this.player.play(\"playerDie\");\r\n            this.player.setVelocityX(0);\r\n            this.chasersGroup.group.children.each(element => {\r\n                let chaser = element;\r\n                console.log(`${chaser.body.velocity}`);\r\n                chaser.setVelocityX(0);\r\n                console.log(`${chaser.body.velocity}`);\r\n            });\r\n            this.backgroundGroup2.group.children.each(element => {\r\n                let backG2 = element;\r\n                console.log(`${backG2.body.velocity}`);\r\n                backG2.setVelocityX(0);\r\n                console.log(`${backG2.body.velocity}`);\r\n            });\r\n            this.roadGroup2.group.children.each(element => {\r\n                let road2 = element;\r\n                console.log(`${road2.body.velocity}`);\r\n                road2.setVelocityX(0);\r\n                console.log(`${road2.body.velocity}`);\r\n            });\r\n        }\r\n        if (this.cursorKeys.space.isDown && this.player.body.enable) {\r\n            if (!this.playerBullets.fired) {\r\n                console.log(`${this.playerBullets.group.children}`);\r\n                this.player.play(\"playerShoot\");\r\n                this.playerShot.play();\r\n                let bullet = this.playerBullets.group.get(this.player.x, this.player.y, \"block\", 2, true).setVelocity(-3 * this.speed, 0).setActive(true).setVisible(true).setDepth(4);\r\n                if (!bullet.body.enable) {\r\n                    bullet.body.enable = true;\r\n                }\r\n                this.playerBullets.fired = true;\r\n                console.log(`player bullets ${this.playerBullets.group.children.size}`);\r\n                console.log(`chaser bullets ${this.chaserBullets.group.children.size}`);\r\n                console.log(`chasers ${this.chasersGroup.group.children.size}`);\r\n                console.log(`platform 1 ${this.platforms1.group.children.size}`);\r\n                console.log(`platform 2 ${this.platforms2.group.children.size}`);\r\n            }\r\n            if (this.bubble1.visible) {\r\n                this.bubble1.visible = false;\r\n            }\r\n        }\r\n        if (this.cursorKeys.shift.isDown) {\r\n            this.bubble1.visible = true;\r\n            this.messageHandler(`The chase is on! You've got to get to your escape ship before you're caught. To play, press up and down to move up and down and press space to fire back at your pursuers. To read the birthdaycard message, press the right arrow key. To start over, (in case you get hit) refresh the page.`);\r\n        }\r\n        else if (this.cursorKeys.shift.isUp && this.cursorKeys.right.isUp) {\r\n            this.bubble1.visible = false;\r\n            this.message1.text = \"\";\r\n        }\r\n        if (this.cursorKeys.right.isDown) {\r\n            this.bubble1.visible = true;\r\n            this.messageHandler(`Hey Cory, sorry this is pretty late in coming, but I finally got this finished! I blame the baby, they just mess things up. I've said it before, but I'll say it again. You're an inspiration, and I've learned a lot from your work as I have been working on the game development stuff. I'm very glad you're my brother, and I hope this next year is superb for you.                                                    Love Adam`);\r\n        }\r\n        if (this.cursorKeys.space.isUp) {\r\n            this.playerBullets.fired = false;\r\n        }\r\n        if (this.cursorKeys.up.isDown) {\r\n            velocity.y -= 1;\r\n        }\r\n        if (this.cursorKeys.down.isDown) {\r\n            velocity.y += 1;\r\n        }\r\n        // We normalize the velocity so that the player is always moving at the same speed, regardless of direction.\r\n        const normalizedVelocity = velocity.normalize();\r\n        if (this.player.body.enable) {\r\n            if (!this.player.anims.isPlaying)\r\n                this.player.play(\"playerRun\");\r\n            this.player.setVelocity(normalizedVelocity.x * this.speed, normalizedVelocity.y * this.speed);\r\n        }\r\n        //this.updateBackGround();\r\n        this.bubble1.x = this.player.x - (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this) / 3;\r\n        this.message1.x = this.player.x - (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this) / 3;\r\n        this.message2.x = this.player.x - (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this) / 3 + 200;\r\n        this.background.x = this.player.x - (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this) / 2;\r\n        this.cycleGroups.forEach(group => {\r\n            group.playerX = this.player.x;\r\n            group.gameWidth = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this);\r\n            group.update();\r\n        });\r\n    }\r\n    messageHandler(text) {\r\n        console.log(window.innerWidth);\r\n        let charPixelWidth = 30;\r\n        let width = text.length * charPixelWidth > 1000 ? 1000 : text.length * charPixelWidth;\r\n        let height = Math.ceil((text.length * charPixelWidth) / 1000) * charPixelWidth;\r\n        this.message1 = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createTextBubble)(this, width + 100, height + (charPixelWidth * 2), text, this.bubble1, this.message1);\r\n    }\r\n    initializeGroups() {\r\n        this.cycleGroups = new Array();\r\n        this.backgroundGroup2 = new _object_scroll_managers__WEBPACK_IMPORTED_MODULE_1__.SceneObjectScrollManager(this, this.physics.add.group(), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this), 2, this.speed);\r\n        this.backgroundGroup2.group.add(this.physics.add.sprite(-100, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 5, \"buildings\", 7).setScale(3).setVelocityX(this.speed / 2));\r\n        this.backgroundGroup2.group.setDepth(1);\r\n        this.backgroundGroup = new _object_scroll_managers__WEBPACK_IMPORTED_MODULE_1__.SceneObjectScrollManager(this, new Phaser.GameObjects.Group(this), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this), 1, null);\r\n        this.backgroundGroup.group.setDepth(3);\r\n        this.backgroundGroup.group.add(this.add.sprite(0, 200, \"buildings\", 4).setScale(5));\r\n        this.roadGroup = new _object_scroll_managers__WEBPACK_IMPORTED_MODULE_1__.SceneObjectScrollManager(this, new Phaser.GameObjects.Group(this), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this), 3, null);\r\n        this.roadGroup.group.setDepth(3);\r\n        this.roadGroup.group.add(this.add.image(0, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 2, \"road\").setScale(10.5));\r\n        this.roadGroup.group.add(this.add.image(32 * 10.5, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 2, \"road\").setScale(10.5));\r\n        this.roadGroup.group.add(this.add.image(32 * 10.5 * 2, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 2, \"road\").setScale(10.5).setDepth(3));\r\n        this.roadGroup.group.add(this.add.image(32 * 10.5 * 3, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 2, \"road\").setScale(10.5).setDepth(3));\r\n        this.roadGroup.group.add(this.add.image(32 * 10.5 * 4, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 2, \"road\").setScale(10.5).setDepth(3));\r\n        this.roadGroup.group.add(this.add.image(32 * 10.5 * 5, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 2, \"road\").setScale(10.5).setDepth(3));\r\n        1;\r\n        this.roadGroup.group.add(this.add.image(32 * 10.5 * 6, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 2, \"road\").setScale(10.5).setDepth(3));\r\n        this.roadGroup2 = new _object_scroll_managers__WEBPACK_IMPORTED_MODULE_1__.SceneObjectScrollManager(this, this.physics.add.group(), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this), 4, this.speed);\r\n        this.roadGroup2.group.add(this.physics.add.image(0, ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3) * 2, \"road\").setScale(20).setOrigin(0, 0).setDepth(1));\r\n        this.roadGroup2.group.add(this.physics.add.image(32 * 20, ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3) * 2, \"road\").setScale(20).setOrigin(0, 0).setDepth(1));\r\n        this.roadGroup2.group.add(this.physics.add.image(32 * 20 * 2, ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3) * 2, \"road\").setScale(20).setOrigin(0, 0).setDepth(1));\r\n        this.roadGroup2.group.add(this.physics.add.image(32 * 20 * 3, ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3) * 2, \"road\").setScale(20).setOrigin(0, 0).setDepth(1));\r\n        this.playerBullets = new _object_scroll_managers__WEBPACK_IMPORTED_MODULE_1__.BulletScrollManager(this, this.physics.add.group(), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this));\r\n        this.chaserBullets = new _object_scroll_managers__WEBPACK_IMPORTED_MODULE_1__.BulletScrollManager(this, this.physics.add.group(), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this));\r\n        this.platforms1 = new _object_scroll_managers__WEBPACK_IMPORTED_MODULE_1__.PlatformsScrollManager(this, this.physics.add.staticGroup(), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this));\r\n        this.platforms1.group.create(0, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3, 'block', 1).setScale(60, 2).setOrigin(0, 0).refreshBody();\r\n        this.platforms1.group.create(50 * 8, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3, 'block', 1).setScale(60, 2).setOrigin(0, 0).refreshBody();\r\n        this.platforms1.group.create(100 * 8, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3, 'block', 1).setScale(60, 2).setOrigin(0, 0).refreshBody();\r\n        this.platforms1.group.create(150 * 8, (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3, 'block', 1).setScale(60, 2).setOrigin(0, 0).refreshBody();\r\n        this.platforms2 = new _object_scroll_managers__WEBPACK_IMPORTED_MODULE_1__.PlatformsScrollManager(this, this.physics.add.staticGroup(), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this));\r\n        this.platforms2.group.create(0, ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3 * 2), 'block', 1).setScale(60, 2).setOrigin(0, 0).refreshBody();\r\n        this.platforms2.group.create(50 * 8, ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3 * 2), 'block', 1).setScale(60, 2).setOrigin(0, 0).refreshBody();\r\n        this.platforms2.group.create(100 * 8, ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3 * 2), 'block', 1).setScale(60, 2).setOrigin(0, 0).refreshBody();\r\n        this.platforms2.group.create(150 * 8, ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this) / 3 * 2), 'block', 1).setScale(60, 2).setOrigin(0, 0).refreshBody();\r\n        this.obstacleGroup = new _object_scroll_managers__WEBPACK_IMPORTED_MODULE_1__.ObstacleScrollManager(this, this.physics.add.staticGroup(), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this));\r\n        this.chasersGroup = new _object_scroll_managers__WEBPACK_IMPORTED_MODULE_1__.ChaserScrollManager(this, this.physics.add.group(), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameWidth)(this), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getGameHeight)(this), this.speed, this.chaserBullets);\r\n        this.cycleGroups.push(this.playerBullets);\r\n        this.cycleGroups.push(this.chaserBullets);\r\n        this.cycleGroups.push(this.backgroundGroup);\r\n        this.cycleGroups.push(this.backgroundGroup2);\r\n        this.cycleGroups.push(this.roadGroup);\r\n        this.cycleGroups.push(this.roadGroup2);\r\n        this.cycleGroups.push(this.platforms1);\r\n        this.cycleGroups.push(this.platforms2);\r\n        this.cycleGroups.push(this.chasersGroup);\r\n    }\r\n    addAnimations() {\r\n        this.anims.create({\r\n            key: 'playerRun',\r\n            frames: this.anims.generateFrameNumbers('runchase', { frames: [0, 1, 2, 3] }),\r\n            frameRate: 8,\r\n            repeat: -1,\r\n            repeatDelay: 0\r\n        });\r\n        this.anims.create({\r\n            key: 'playerShoot',\r\n            frames: this.anims.generateFrameNumbers('runchase', { frames: [5, 7, 8, 9] }),\r\n            frameRate: 12,\r\n            repeat: 0,\r\n            repeatDelay: 0\r\n        });\r\n        this.anims.create({\r\n            key: 'playerDie',\r\n            frames: this.anims.generateFrameNumbers('runchase', { frames: [10, 11, 12, 13] }),\r\n            frameRate: 8,\r\n            repeat: 0,\r\n            repeatDelay: 0\r\n        });\r\n        this.anims.create({\r\n            key: 'chaserRun',\r\n            frames: this.anims.generateFrameNumbers('runchase', { frames: [15, 16, 17, 18] }),\r\n            frameRate: 8,\r\n            repeat: -1,\r\n            repeatDelay: 0\r\n        });\r\n        this.anims.create({\r\n            key: 'chaserShoot',\r\n            frames: this.anims.generateFrameNumbers('runchase', { frames: [20, 21, 22, 23, 24] }),\r\n            frameRate: 12,\r\n            repeat: 0,\r\n            repeatDelay: 0\r\n        });\r\n        this.anims.create({\r\n            key: 'chaserDie',\r\n            frames: this.anims.generateFrameNumbers('runchase', { frames: [25, 26, 27, 28] }),\r\n            frameRate: 8,\r\n            repeat: 0,\r\n            repeatDelay: 0\r\n        });\r\n    }\r\n    chaserBulletCollide(bullet, chaser) {\r\n        this.playerBullets.group.killAndHide(bullet);\r\n        bullet.disableBody(true, true);\r\n        chaser.play(\"chaserDie\").setScale(5);\r\n        this.chaserDied.play();\r\n        //chaser.disableBody(true, false)\r\n        chaser.setVelocityX(0);\r\n    }\r\n    playerHit(player, bullet) {\r\n        console.log(\"direct hit!\");\r\n        //this.player.setVelocityX(0);\r\n        //player.disableBody(true, false);\r\n        this.playerDied.play();\r\n        this.playerDead = true;\r\n        bullet.disableBody(true, true);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://coryproj/./src/scenes/game-scene.ts?");

/***/ }),

/***/ "./src/scenes/index.ts":
/*!*****************************!*\
  !*** ./src/scenes/index.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _main_menu_scene__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main-menu-scene */ \"./src/scenes/main-menu-scene.ts\");\n/* harmony import */ var _boot_scene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boot-scene */ \"./src/scenes/boot-scene.ts\");\n/* harmony import */ var _game_scene__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game-scene */ \"./src/scenes/game-scene.ts\");\n\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([_boot_scene__WEBPACK_IMPORTED_MODULE_1__.BootScene, _main_menu_scene__WEBPACK_IMPORTED_MODULE_0__.MainMenuScene, _game_scene__WEBPACK_IMPORTED_MODULE_2__.GameScene]);\r\n\n\n//# sourceURL=webpack://coryproj/./src/scenes/index.ts?");

/***/ }),

/***/ "./src/scenes/main-menu-scene.ts":
/*!***************************************!*\
  !*** ./src/scenes/main-menu-scene.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MainMenuScene\": () => (/* binding */ MainMenuScene)\n/* harmony export */ });\n/* harmony import */ var _ui_menu_button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ui/menu-button */ \"./src/ui/menu-button.ts\");\n\r\nconst sceneConfig = {\r\n    active: false,\r\n    visible: false,\r\n    key: 'MainMenu',\r\n};\r\n/**\r\n * The initial scene that starts, shows the splash screens, and loads the necessary assets.\r\n */\r\nclass MainMenuScene extends Phaser.Scene {\r\n    constructor() {\r\n        super(sceneConfig);\r\n    }\r\n    create() {\r\n        this.add\r\n            .text(100, 50, 'This is a sample main menu. Click the \"Start\" button below to run your game.', {\r\n            color: '#FFFFFF',\r\n        })\r\n            .setFontSize(24);\r\n        new _ui_menu_button__WEBPACK_IMPORTED_MODULE_0__.MenuButton(this, 100, 150, 'Start Game', () => {\r\n            this.scene.start('Game');\r\n        });\r\n        new _ui_menu_button__WEBPACK_IMPORTED_MODULE_0__.MenuButton(this, 100, 250, 'Settings', () => console.log('settings button clicked'));\r\n        new _ui_menu_button__WEBPACK_IMPORTED_MODULE_0__.MenuButton(this, 100, 350, 'Help', () => console.log('help button clicked'));\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://coryproj/./src/scenes/main-menu-scene.ts?");

/***/ }),

/***/ "./src/scenes/object-scroll-managers.ts":
/*!**********************************************!*\
  !*** ./src/scenes/object-scroll-managers.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ObjectScrollManager\": () => (/* binding */ ObjectScrollManager),\n/* harmony export */   \"SceneObjectScrollManager\": () => (/* binding */ SceneObjectScrollManager),\n/* harmony export */   \"PlatformsScrollManager\": () => (/* binding */ PlatformsScrollManager),\n/* harmony export */   \"BulletScrollManager\": () => (/* binding */ BulletScrollManager),\n/* harmony export */   \"ChaserScrollManager\": () => (/* binding */ ChaserScrollManager),\n/* harmony export */   \"spawner\": () => (/* binding */ spawner),\n/* harmony export */   \"ObstacleScrollManager\": () => (/* binding */ ObstacleScrollManager),\n/* harmony export */   \"PitScrollManager\": () => (/* binding */ PitScrollManager)\n/* harmony export */ });\nclass ObjectScrollManager {\r\n    constructor(scene, group, gameWidth) {\r\n        this.firstItem = group.getFirst(true);\r\n        this.lastItem = group.getLast(true);\r\n        this.group = group;\r\n        this.counter = 0;\r\n        this.playerX = 0;\r\n        this.gameWidth = gameWidth;\r\n        this.scene = scene;\r\n    }\r\n    updateLastAndFirst(element) {\r\n        if (!this.firstItem && !this.lastItem) {\r\n            this.firstItem = this.group.getFirst(true);\r\n            this.lastItem = this.group.getLast(true);\r\n        }\r\n        if (this.group.children.size == 1) {\r\n            this.firstItem = element;\r\n            this.lastItem = element;\r\n        }\r\n        if (element.x < this.firstItem.x) {\r\n            this.firstItem = element;\r\n        }\r\n        if (element.x > this.lastItem.x) {\r\n            this.lastItem = element;\r\n        }\r\n    }\r\n    updateCycling(element) {\r\n        if (element.x < this.playerX - this.gameWidth) {\r\n            this.group.killAndHide(element);\r\n            //console.log(`killed one ${this.group.children.size}`);\r\n        }\r\n    }\r\n    update() {\r\n        this.group.children.getArray().forEach(element => {\r\n            this.updateLastAndFirst(element);\r\n            this.updateCycling(element);\r\n        });\r\n    }\r\n}\r\n;\r\nclass SceneObjectScrollManager extends ObjectScrollManager {\r\n    constructor(scene, group, gameWidth, gameHeight, layer, speed) {\r\n        super(scene, group, gameWidth);\r\n        this.numbGener = new Phaser.Math.RandomDataGenerator();\r\n        this.gameHeight = gameHeight;\r\n        this.layer = layer;\r\n        this.speed = speed;\r\n    }\r\n    update() {\r\n        super.update();\r\n        if (this.layer == 1) {\r\n            if ((this.playerX + this.gameWidth / 2) - this.lastItem.x > (-50)) {\r\n                this.group.get(this.playerX + this.gameWidth / 2 + 300, this.gameHeight / 10, \"buildings\", this.numbGener.integerInRange(0, 5)).setActive(true).setVisible(true).setScale(5).setDepth(3);\r\n                //console.log(`Added one ${this.group.children.size}`);\r\n            }\r\n        }\r\n        else if (this.layer == 2) {\r\n            if ((this.playerX + this.gameWidth / 2) - this.lastItem.x > (-150)) {\r\n                this.group.get(this.playerX + this.gameWidth / 2 + 300, this.gameHeight / 5, \"buildings\", this.numbGener.integerInRange(6, 8)).setActive(true).setVisible(true).setScale(3).setVelocityX(this.speed / 2).setDepth(1);\r\n                //console.log(`Added one ${this.group.children.size}`);\r\n            }\r\n            this.group.children.getArray().forEach(element => {\r\n                let gameChildElement = element;\r\n                if (this.scene.player.body.velocity.x > 1)\r\n                    gameChildElement.setVelocityX(this.speed / 2);\r\n            });\r\n        }\r\n        else if (this.layer == 3) {\r\n            if ((this.playerX + this.gameWidth / 2) - this.lastItem.x > (this.gameWidth / 60)) {\r\n                this.group.get(this.playerX + this.gameWidth / 2 + 300, this.gameHeight / 2 + 5, \"road\").setActive(true).setVisible(true).setScale(10.5).setDepth(3);\r\n                //console.log(`Added one ${this.group.children.size}`);\r\n            }\r\n        }\r\n        else if (this.layer == 4) {\r\n            if ((this.playerX + this.gameWidth / 2) - this.lastItem.x > (this.gameWidth / 60)) {\r\n                this.group.get(this.playerX + (this.gameWidth / 3) * 2, (this.gameHeight / 3) * 2, \"road\").setActive(true).setVisible(true).setScale(20).setDepth(1).setOrigin(0, 0).setVelocityX(-this.speed * 1.5);\r\n                //console.log(`Added one ${this.group.children.size}`);\r\n            }\r\n            this.group.children.getArray().forEach(element => {\r\n                let gameChildElement = element;\r\n                if (this.scene.player.body.velocity.x > 1)\r\n                    gameChildElement.setVelocityX(-this.speed * 1.5);\r\n            });\r\n        }\r\n        this.counter++;\r\n    }\r\n}\r\nclass PlatformsScrollManager extends ObjectScrollManager {\r\n    constructor(scene, group, gameWidth) {\r\n        super(scene, group, gameWidth);\r\n    }\r\n    update() {\r\n        super.update();\r\n        //if ((this.playerX + this.gameWidth/2) - this.lastItem.x > (this.gameWidth/2)) {\r\n        if ((this.playerX + this.gameWidth / 2) > (this.lastItem.x + (this.lastItem.width) * 10)) {\r\n            let newItem = this.group.get(this.playerX + this.gameWidth / 2, this.firstItem.y, \"block\", 1).setOrigin(0, 0).setActive(true).setVisible(true).setScale(10, 2).setDepth(4);\r\n            newItem.body.x = newItem.x;\r\n            newItem.body.y = newItem.y;\r\n            newItem.body.setSize(this.lastItem.width * 10, this.lastItem.height * 2, true);\r\n            //console.log(`Added one ${this.group.children.size}`);\r\n        }\r\n    }\r\n}\r\nclass BulletScrollManager extends ObjectScrollManager {\r\n    constructor(scene, group, gameWidth) {\r\n        super(scene, group, gameWidth);\r\n    }\r\n    update() {\r\n        super.update();\r\n        this.group.children.getArray().forEach(element => {\r\n            let gameChildElement = element;\r\n            if (!gameChildElement.body.enable) {\r\n                this.group.killAndHide(element);\r\n            }\r\n            //let bulletSprite = element as Phaser.Physics.Arcade.Sprite;\r\n            if (gameChildElement.x > this.playerX + (this.gameWidth / 2)) {\r\n                this.group.killAndHide(gameChildElement);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass ChaserScrollManager extends ObjectScrollManager {\r\n    constructor(scene, group, gameWidth, gameHeight, speed, bulletGener) {\r\n        super(scene, group, gameWidth);\r\n        this.gameHeight = gameHeight;\r\n        this.topLimit = (gameHeight / 3) - 50;\r\n        this.bottomLimit = ((gameHeight / 3) * 2) + 50;\r\n        this.speed = speed;\r\n        this.bulletGener = bulletGener;\r\n        const spawnTimerConfig = {\r\n            delay: 1000,\r\n            loop: true,\r\n            callback: this.spawnChaser(this)\r\n        };\r\n        this.spawnTimer = this.scene.time.addEvent(spawnTimerConfig);\r\n        const bulletTimerConfig = {\r\n            delay: 2000,\r\n            loop: true,\r\n            callback: this.spawnBullet(this, this.bulletGener)\r\n        };\r\n        this.spawnTimer = this.scene.time.addEvent(bulletTimerConfig);\r\n        this.numbGener = new Phaser.Math.RandomDataGenerator();\r\n    }\r\n    update() {\r\n        super.update();\r\n        this.group.children.getArray().forEach(element => {\r\n            let gameChildElement = element;\r\n            if ((gameChildElement.x > (this.playerX - this.gameWidth / 2) + (this.gameWidth / 6)) && (gameChildElement.texture.key == 'runchase') && (this.scene.player.body.enable)) {\r\n                gameChildElement.setVelocityX(1 * this.speed);\r\n            }\r\n            if ((gameChildElement.x < (this.playerX - this.gameWidth / 2)) && (gameChildElement.body.velocity.x < 0.9)) {\r\n                this.group.killAndHide(element);\r\n            }\r\n            if (!gameChildElement.body.enable) {\r\n                //gameChildElement.play(\"chaserDie\");// this.group.kill(element)\r\n                gameChildElement.setVelocityX(0);\r\n            }\r\n            if (gameChildElement.body.enable && !gameChildElement.anims.isPlaying) {\r\n                gameChildElement.play(\"chaserRun\");\r\n            }\r\n            if (gameChildElement.anims.currentAnim.key == \"chaserDie\" && gameChildElement.anims.currentFrame.index == 4) {\r\n                //gameChildElement.setFrame(28);\r\n                gameChildElement.disableBody(true, false);\r\n            }\r\n        });\r\n    }\r\n    updateCycling() {\r\n        //if ()\r\n    }\r\n    spawnChaser(manager) {\r\n        return function () {\r\n            if (manager.group.children.size < 4) {\r\n                manager.group.get(manager.playerX - manager.gameWidth, manager.numbGener.realInRange(manager.gameHeight / 3 + 50, (manager.gameHeight / 3) * 2 - 50), \"runchase\", manager.counter)\r\n                    .setActive(true).setVisible(true).setVelocityX(2 * manager.speed).setScale(5).setDepth(4).play(\"chaserRun\");\r\n            }\r\n            else if (manager.group.children.size >= 4) {\r\n                let anyInactive = false;\r\n                manager.group.children.each(element => {\r\n                    if (!element.active) {\r\n                        anyInactive = true;\r\n                    }\r\n                });\r\n                if (anyInactive) {\r\n                    let reactivated = manager.group.get(manager.playerX - manager.gameWidth, manager.numbGener.realInRange((manager.gameHeight / 3) + 50, ((manager.gameHeight / 3) * 2) - 50), \"runchase\", manager.counter)\r\n                        .setActive(true).setVisible(true).setVelocityX(2 * manager.speed).setScale(5).setDepth(4).play(\"chaserRun\");\r\n                    reactivated.body.enable = true;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    spawnBullet(manager, bulletsManager) {\r\n        return function () {\r\n            // manager.group.children.each(element => {\r\n            //     if (!element.active)\r\n            //     {\r\n            //     }\r\n            // });\r\n            if (manager.group.children.size > 0) {\r\n                let chaser = manager.group.children.getArray()[manager.numbGener.integerInRange(0, manager.group.children.size - 1)];\r\n                if (chaser.body.velocity.x < 2 * manager.speed - 20) {\r\n                    manager.scene.chaserShot.play();\r\n                    bulletsManager.group.get(chaser.x, chaser.y, \"block2\", 3).setActive(true).setVisible(true).setVelocityX(4 * manager.speed).setDepth(4);\r\n                    chaser.play(\"chaserShoot\");\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\nconst spawner = function () { };\r\nclass ObstacleScrollManager extends ObjectScrollManager {\r\n    constructor(scene, group, gameWidth, gameHeight) {\r\n        super(scene, group, gameWidth);\r\n        this.gameHeight = gameHeight;\r\n    }\r\n    update() {\r\n        super.update();\r\n    }\r\n}\r\nclass PitScrollManager extends ObjectScrollManager {\r\n    constructor(scene, group, gameWidth, gameHeight) {\r\n        super(scene, group, gameWidth);\r\n        this.gameHeight = gameHeight;\r\n    }\r\n    update() {\r\n        super.update();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://coryproj/./src/scenes/object-scroll-managers.ts?");

/***/ }),

/***/ "./src/ui/menu-button.ts":
/*!*******************************!*\
  !*** ./src/ui/menu-button.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MenuButton\": () => (/* binding */ MenuButton)\n/* harmony export */ });\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! phaser */ \"./node_modules/phaser/dist/phaser.js\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_0__);\n\r\nconst padding = 10;\r\nconst minimumWidth = 200;\r\nconst minimumHeight = 50;\r\nclass MenuButton extends phaser__WEBPACK_IMPORTED_MODULE_0__.GameObjects.Rectangle {\r\n    constructor(scene, x, y, text, onClick) {\r\n        super(scene, x, y);\r\n        scene.add.existing(this);\r\n        this.setOrigin(0, 0);\r\n        this.label = scene.add\r\n            .text(x + padding, y + padding, text)\r\n            .setFontSize(18)\r\n            .setAlign('center');\r\n        const labelWidth = this.label.width + padding;\r\n        const labelHeight = this.label.height + padding;\r\n        this.width = labelWidth >= minimumWidth ? labelWidth : minimumWidth;\r\n        this.height = labelHeight >= minimumHeight ? labelHeight : minimumHeight;\r\n        this.setInteractive({ useHandCursor: true })\r\n            .on('pointerover', this.enterMenuButtonHoverState)\r\n            .on('pointerout', this.enterMenuButtonRestState)\r\n            .on('pointerdown', this.enterMenuButtonActiveState)\r\n            .on('pointerup', this.enterMenuButtonHoverState);\r\n        if (onClick) {\r\n            this.on('pointerup', onClick);\r\n        }\r\n        this.enterMenuButtonRestState();\r\n    }\r\n    enterMenuButtonHoverState() {\r\n        this.label.setColor('#000000');\r\n        this.setFillStyle(0x888888);\r\n    }\r\n    enterMenuButtonRestState() {\r\n        this.label.setColor('#FFFFFF');\r\n        this.setFillStyle(0x888888);\r\n    }\r\n    enterMenuButtonActiveState() {\r\n        this.label.setColor('#BBBBBB');\r\n        this.setFillStyle(0x444444);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://coryproj/./src/ui/menu-button.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkcoryproj"] = self["webpackChunkcoryproj"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors"], () => (__webpack_require__("./src/main.ts")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;